{
  "posts": [
    {
      "id": "616198d8ce9a7f4c78ab79bc",
      "uuid": "8fe624bc-6fbf-4341-adc3-61ec2070d721",
      "title": "Let's build Vue directives: Adding a wave effect to buttons",
      "slug": "lets-build-vue-directives-adding-a-wave-effect-to-buttons",
      "comment_id": "616198d8ce9a7f4c78ab79bc",
      "feature_image": null,
      "featured": false,
      "created_at": "2021-10-09T15:27:52.000+02:00",
      "updated_at": "2021-12-10T16:19:54.000+01:00",
      "published_at": "2021-12-10T10:00:00.000+01:00",
      "custom_excerpt": "The wave, aka the ripple effect, became popular with Google's material design guidelines. When a user interacts with a button, a wave-like animation would spread outwards from the clicking/touching point. Read on to learn how to implement this feature with a Vue.js directive.",
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "custom_template": null,
      "canonical_url": null,
      "primary_author": null,
      "primary_tag": null,
      "url": "https://blog.q-bit.me/lets-build-vue-directives-adding-a-wave-effect-to-buttons/",
      "excerpt": "The wave, aka the ripple effect, became popular with Google's material design guidelines. When a user interacts with a button, a wave-like animation would spread outwards from the clicking/touching point. Read on to learn how to implement this feature with a Vue.js directive.",
      "page": false,
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "frontmatter": null
    },
    {
      "id": "60fd811b2dcbe203bf99245f",
      "uuid": "ad93850b-9d4f-41e2-97b1-7827525f1859",
      "title": "A step-by-step guide to developing and deploying Vue apps with docker, part two",
      "slug": "a-step-by-step-guide-for-developing-and-deploying-a-vue-js-app-with-docker-part-two",
      "comment_id": "60fd811b2dcbe203bf99245f",
      "feature_image": null,
      "featured": true,
      "created_at": "2021-07-25T17:19:55.000+02:00",
      "updated_at": "2021-11-15T07:53:24.000+01:00",
      "published_at": "2021-11-15T07:50:00.000+01:00",
      "custom_excerpt": "Vue is a great framework to develop user interfaces. It has experienced a great deal of growth in popularity since its initial release in 2014 and still continues to improve. This second part of the series will explain how to develop \"in\" a container and ship your app with a custom Docker workflow",
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "custom_template": null,
      "canonical_url": null,
      "primary_author": null,
      "primary_tag": null,
      "url": "https://blog.q-bit.me/a-step-by-step-guide-for-developing-and-deploying-a-vue-js-app-with-docker-part-two/",
      "excerpt": "Vue is a great framework to develop user interfaces. It has experienced a great deal of growth in popularity since its initial release in 2014 and still continues to improve. This second part of the series will explain how to develop \"in\" a container and ship your app with a custom Docker workflow",
      "page": false,
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "frontmatter": null
    },
    {
      "id": "616c2a23ce9a7f4c78ab7b88",
      "uuid": "641118c1-a7ef-47c6-bed1-b6d7fa01ab4e",
      "title": "Quick & Dirty: How to add a client search feature to your Ghost blog",
      "slug": "how-to-add-a-search-feature-to-your-ghost-cms-blog",
      "comment_id": "616c2a23ce9a7f4c78ab7b88",
      "feature_image": null,
      "featured": false,
      "created_at": "2021-10-17T15:50:27.000+02:00",
      "updated_at": "2021-10-30T16:59:04.000+02:00",
      "published_at": "2021-10-17T18:35:40.000+02:00",
      "custom_excerpt": "This article attempts to give you an idea of how to implement a search feature for your own Ghost blog. You'll learn how to create your own index, store it on the clientside and query it for results.  In the related code repository, you can also find an implementation example. ",
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "custom_template": null,
      "canonical_url": null,
      "primary_author": null,
      "primary_tag": null,
      "url": "https://blog.q-bit.me/how-to-add-a-search-feature-to-your-ghost-cms-blog/",
      "excerpt": "This article attempts to give you an idea of how to implement a search feature for your own Ghost blog. You'll learn how to create your own index, store it on the clientside and query it for results.  In the related code repository, you can also find an implementation example. ",
      "page": false,
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "frontmatter": null
    },
    {
      "id": "615985c374359d041d2c44b4",
      "uuid": "002f17c9-2d85-485b-b927-72620a94a402",
      "title": "Let's build Vue directives: Scrolling elements into view",
      "slug": "lets-build-vue-directives-scrolling-elements-into-view",
      "comment_id": "615985c374359d041d2c44b4",
      "feature_image": null,
      "featured": false,
      "created_at": "2021-10-03T12:28:19.000+02:00",
      "updated_at": "2021-11-08T18:30:26.000+01:00",
      "published_at": "2021-10-03T17:12:10.000+02:00",
      "custom_excerpt": "Directives are one of Vue's most powerful concepts. They provide direct access to a DOM element over its lifecycle. And you're not restricted to the built-in ones but can also write your own custom directives. ",
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "custom_template": null,
      "canonical_url": null,
      "primary_author": null,
      "primary_tag": null,
      "url": "https://blog.q-bit.me/lets-build-vue-directives-scrolling-elements-into-view/",
      "excerpt": "Directives are one of Vue's most powerful concepts. They provide direct access to a DOM element over its lifecycle. And you're not restricted to the built-in ones but can also write your own custom directives. ",
      "page": false,
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "frontmatter": null
    },
    {
      "id": "61389e017fa8590405960711",
      "uuid": "c5970066-15f4-46a0-ab28-48e0e177d88d",
      "title": "How to self-host Google fonts for your web application | Part 1/2: DIY vs. CDN",
      "slug": "how-to-self-host-google-fonts-part-one",
      "comment_id": "61389e017fa8590405960711",
      "feature_image": null,
      "featured": false,
      "created_at": "2021-09-08T13:26:57.000+02:00",
      "updated_at": "2021-09-15T10:00:00.000+02:00",
      "published_at": "2021-09-15T10:00:00.000+02:00",
      "custom_excerpt": "Google provides plenty of web services, one of which is Google Fonts. At the same time, using these services is as simple as opening a window (or browser tab, literally speaking). You might have a good reason though not to use these, and instead, provide font files from your own sources.",
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "custom_template": null,
      "canonical_url": null,
      "primary_author": null,
      "primary_tag": null,
      "url": "https://blog.q-bit.me/how-to-self-host-google-fonts-part-one/",
      "excerpt": "Google provides plenty of web services, one of which is Google Fonts. At the same time, using these services is as simple as opening a window (or browser tab, literally speaking). You might have a good reason though not to use these, and instead, provide font files from your own sources.",
      "page": false,
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "frontmatter": null
    },
    {
      "id": "61332806098a7a0406bf0bcb",
      "uuid": "9b96e837-fffc-4b9a-92e2-a602c2884e5f",
      "title": "How to self-host Google fonts for your web application | Part 2/2: Download and provision",
      "slug": "how-to-self-host-google-fonts-part-two",
      "comment_id": "61332806098a7a0406bf0bcb",
      "feature_image": null,
      "featured": false,
      "created_at": "2021-09-04T10:02:14.000+02:00",
      "updated_at": "2021-09-15T10:00:00.000+02:00",
      "published_at": "2021-09-15T10:00:00.000+02:00",
      "custom_excerpt": "They are everywhere. For a good reason as well - typography plays a big role in UI design, and Google provides designers and developers a simple solution by providing popular fonts over their CDN.  You might, however, have good reason to serve these from your own server.",
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "custom_template": null,
      "canonical_url": null,
      "primary_author": null,
      "primary_tag": null,
      "url": "https://blog.q-bit.me/how-to-self-host-google-fonts-part-two/",
      "excerpt": "They are everywhere. For a good reason as well - typography plays a big role in UI design, and Google provides designers and developers a simple solution by providing popular fonts over their CDN.  You might, however, have good reason to serve these from your own server.",
      "page": false,
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "frontmatter": null
    },
    {
      "id": "60fd83a32dcbe203bf992467",
      "uuid": "4f275b94-6c4b-4f1e-b15d-f24210f27f5a",
      "title": "How to monitor the progress of a Javascript fetch - request and cancel it on demand.",
      "slug": "monitoring-and-canceling-a-javascript-fetch-request",
      "comment_id": "60fd83a32dcbe203bf992467",
      "feature_image": null,
      "featured": false,
      "created_at": "2021-07-25T17:30:43.000+02:00",
      "updated_at": "2021-08-20T10:00:00.000+02:00",
      "published_at": "2021-08-20T10:00:00.000+02:00",
      "custom_excerpt": "Waiting blows. That goes for many situations in life, including when a website you visit is busy loading new data. However, it's usually helpful to visualize that something is happening in the background. Or be able to pull the plug. Read on to find out how that's to be done with the fetch API.",
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "custom_template": null,
      "canonical_url": null,
      "primary_author": null,
      "primary_tag": null,
      "url": "https://blog.q-bit.me/monitoring-and-canceling-a-javascript-fetch-request/",
      "excerpt": "Waiting blows. That goes for many situations in life, including when a website you visit is busy loading new data. However, it's usually helpful to visualize that something is happening in the background. Or be able to pull the plug. Read on to find out how that's to be done with the fetch API.",
      "page": false,
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "frontmatter": null
    },
    {
      "id": "60e9e2604eacaf03c46bea75",
      "uuid": "edda420e-4908-4696-a4f8-a456cf1d3439",
      "title": "A step-by-step guide to developing and deploying Vue apps with docker, part one",
      "slug": "how-to-develop-and-deploy-a-vue-js-app-with-docker-part-one",
      "comment_id": "60e9e2604eacaf03c46bea75",
      "feature_image": null,
      "featured": true,
      "created_at": "2021-07-10T20:09:36.000+02:00",
      "updated_at": "2021-11-06T13:24:37.000+01:00",
      "published_at": "2021-08-13T10:00:00.000+02:00",
      "custom_excerpt": "Vue is a great framework to develop user interfaces. It has experienced a great deal of growth in popularity since its initial release in 2014 and still continues to improve. In this article, you'll learn how to make your Vue development workflow even better using Docker",
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "custom_template": null,
      "canonical_url": null,
      "primary_author": null,
      "primary_tag": null,
      "url": "https://blog.q-bit.me/how-to-develop-and-deploy-a-vue-js-app-with-docker-part-one/",
      "excerpt": "Vue is a great framework to develop user interfaces. It has experienced a great deal of growth in popularity since its initial release in 2014 and still continues to improve. In this article, you'll learn how to make your Vue development workflow even better using Docker",
      "page": false,
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "frontmatter": null
    },
    {
      "id": "60fb16582dcbe203bf992120",
      "uuid": "3cf7577f-8f5f-4983-9775-1fd45fd6c90e",
      "title": "A collection of useful express.js middleware concepts for your next project",
      "slug": "a-collection-of-useful-express-js-middleware-concepts-for-your-next-project",
      "comment_id": "60fb16582dcbe203bf992120",
      "feature_image": null,
      "featured": false,
      "created_at": "2021-07-23T21:19:52.000+02:00",
      "updated_at": "2021-08-06T10:00:00.000+02:00",
      "published_at": "2021-08-06T10:00:00.000+02:00",
      "custom_excerpt": "This article explains a few techniques that make use of express's middleware interface. You will learn how to set up a common logger, add CORS and cache HTTP headers, as well as implement simple Basic Authentication into your Node application.",
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "custom_template": null,
      "canonical_url": null,
      "primary_author": null,
      "primary_tag": null,
      "url": "https://blog.q-bit.me/a-collection-of-useful-express-js-middleware-concepts-for-your-next-project/",
      "excerpt": "This article explains a few techniques that make use of express's middleware interface. You will learn how to set up a common logger, add CORS and cache HTTP headers, as well as implement simple Basic Authentication into your Node application.",
      "page": false,
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "frontmatter": null
    },
    {
      "id": "610175e69f73d7077d69b3e5",
      "uuid": "28ab04a5-5ce0-4b81-879f-106e203dbff9",
      "title": "Seven advanced techniques for Javascript spread syntax and rest parameters",
      "slug": "ten-simple-techniques-for-javascript-spread-and-rest",
      "comment_id": "610175e69f73d7077d69b3e5",
      "feature_image": null,
      "featured": false,
      "created_at": "2021-07-28T17:21:10.000+02:00",
      "updated_at": "2021-08-01T18:33:18.000+02:00",
      "published_at": "2021-07-29T08:19:00.000+02:00",
      "custom_excerpt": "Spread syntax and rest parameters are two sides of the same coin. While the first gives you access to all properties of an object or array, the latter 'compresses' several variables or arguments into a single array. Read on to learn how to make the best use of this syntactic gemstone collection",
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "custom_template": null,
      "canonical_url": null,
      "primary_author": null,
      "primary_tag": null,
      "url": "https://blog.q-bit.me/ten-simple-techniques-for-javascript-spread-and-rest/",
      "excerpt": "Spread syntax and rest parameters are two sides of the same coin. While the first gives you access to all properties of an object or array, the latter 'compresses' several variables or arguments into a single array. Read on to learn how to make the best use of this syntactic gemstone collection",
      "page": false,
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "frontmatter": null
    },
    {
      "id": "60d6202d909db40385fc9fd0",
      "uuid": "f33c4658-3a96-4a0a-b6da-e2f17584c7d7",
      "title": "🌙 How to implement darkmode with a Vue.js component",
      "slug": "dark-mode-toggle-component-with-vue-js",
      "comment_id": "60d6202d909db40385fc9fd0",
      "feature_image": null,
      "featured": false,
      "created_at": "2021-06-25T20:27:57.000+02:00",
      "updated_at": "2021-08-01T20:16:28.000+02:00",
      "published_at": "2021-06-27T14:01:00.000+02:00",
      "custom_excerpt": "A dark mode feature can be a bliss for your webapp's users. It reduces stress on the eye in low-light conditions and can also help saving energy on the device. In this post, you'll learn how to write your own Vue.js component to add it to any newly created - or already existing project with ease.",
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "custom_template": null,
      "canonical_url": null,
      "primary_author": null,
      "primary_tag": null,
      "url": "https://blog.q-bit.me/dark-mode-toggle-component-with-vue-js/",
      "excerpt": "A dark mode feature can be a bliss for your webapp's users. It reduces stress on the eye in low-light conditions and can also help saving energy on the device. In this post, you'll learn how to write your own Vue.js component to add it to any newly created - or already existing project with ease.",
      "page": false,
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "frontmatter": null
    },
    {
      "id": "60b51c4d909db40385fc9c9f",
      "uuid": "ccf0524c-89e1-4d7c-a493-e3cf525a9dab",
      "title": "Use async / await with Javascript's .map() and other high-order functions",
      "slug": "use-async-await-with-high-order-functions",
      "comment_id": "60b51c4d909db40385fc9c9f",
      "feature_image": null,
      "featured": true,
      "created_at": "2021-05-31T19:26:37.000+02:00",
      "updated_at": "2021-07-27T19:37:22.000+02:00",
      "published_at": "2021-05-31T21:32:48.000+02:00",
      "custom_excerpt": "High order functions in Javascript are incredibly useful to improve code readability and to reduce redundancies. They have a weak point, however: Asynchrony. Read on to learn how to tackle this matter.",
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "custom_template": null,
      "canonical_url": null,
      "primary_author": null,
      "primary_tag": null,
      "url": "https://blog.q-bit.me/use-async-await-with-high-order-functions/",
      "excerpt": "High order functions in Javascript are incredibly useful to improve code readability and to reduce redundancies. They have a weak point, however: Asynchrony. Read on to learn how to tackle this matter.",
      "page": false,
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "frontmatter": null
    },
    {
      "id": "6086ff79909db40385fc9467",
      "uuid": "a1a79684-e7d0-4946-873e-4d9af631ded1",
      "title": "Five  conductive - and five innovative npm packages",
      "slug": "ten-npm-packages-to-refine-your-everyday-work",
      "comment_id": "6086ff79909db40385fc9467",
      "feature_image": null,
      "featured": false,
      "created_at": "2021-04-26T19:59:21.000+02:00",
      "updated_at": "2021-06-13T21:07:11.000+02:00",
      "published_at": "2021-05-15T14:21:08.000+02:00",
      "custom_excerpt": "The Node Package Manager (NPM), offers a variety of open source modules to extend your digital products. This article aims to present you a mixture of good - old utility modules, as well as some libraries which have rather exotic use cases.",
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "custom_template": null,
      "canonical_url": null,
      "primary_author": null,
      "primary_tag": null,
      "url": "https://blog.q-bit.me/ten-npm-packages-to-refine-your-everyday-work/",
      "excerpt": "The Node Package Manager (NPM), offers a variety of open source modules to extend your digital products. This article aims to present you a mixture of good - old utility modules, as well as some libraries which have rather exotic use cases.",
      "page": false,
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "frontmatter": null
    },
    {
      "id": "604372c18bcca203882c5bcc",
      "uuid": "04bec027-1e4d-443a-af1c-5dc6675fc464",
      "title": "How to use service workers in javascript",
      "slug": "an-introduction-to-the-javascript-service-worker-api",
      "comment_id": "604372c18bcca203882c5bcc",
      "feature_image": null,
      "featured": false,
      "created_at": "2021-03-06T13:17:05.000+01:00",
      "updated_at": "2021-07-25T20:37:08.000+02:00",
      "published_at": "2021-04-15T10:00:00.000+02:00",
      "custom_excerpt": "Progressive Webapps use service workers to make websites and webapps feel more like the native apps users know and love on their phones. This article will give you an introduction into the topic with some simple - to - follow code examples. ",
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "custom_template": null,
      "canonical_url": null,
      "primary_author": null,
      "primary_tag": null,
      "url": "https://blog.q-bit.me/an-introduction-to-the-javascript-service-worker-api/",
      "excerpt": "Progressive Webapps use service workers to make websites and webapps feel more like the native apps users know and love on their phones. This article will give you an introduction into the topic with some simple - to - follow code examples. ",
      "page": false,
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": "Progressive Webapps use service workers to make websites and webapps feel more like the native apps users know and love on their phones.",
      "frontmatter": null
    },
    {
      "id": "6069c404b6454d03943e67dd",
      "uuid": "12f6aa83-2414-4a22-8266-6e5f8663f9c0",
      "title": "How to create svg elements with Javascript",
      "slug": "how-to-create-svg-elements-with-javascript",
      "comment_id": "6069c404b6454d03943e67dd",
      "feature_image": null,
      "featured": true,
      "created_at": "2021-04-04T15:49:56.000+02:00",
      "updated_at": "2021-08-01T20:18:05.000+02:00",
      "published_at": "2021-04-06T19:49:37.000+02:00",
      "custom_excerpt": "SVGs are easily dropped into existing html content. But what if you wanted to add them dynamically, say to several DOM elements, with Javascript? Read on to find out how.",
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "custom_template": null,
      "canonical_url": null,
      "primary_author": null,
      "primary_tag": null,
      "url": "https://blog.q-bit.me/how-to-create-svg-elements-with-javascript/",
      "excerpt": "SVGs are easily dropped into existing html content. But what if you wanted to add them dynamically, say to several DOM elements, with Javascript? Read on to find out how.",
      "page": false,
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": "SVGs are easily dropped into existing html content. But what if you wanted to add them dynamically, say to several DOM elements, with Javascript?",
      "frontmatter": null
    }
  ],
  "meta": {
    "pagination": { "page": 1, "limit": 15, "pages": 2, "total": 22, "next": 2, "prev": null }
  }
}
